###############################################################################
#
# IAR C/C++ Compiler V6.40.1.950/W32 for MSP430           25/Feb/2016  23:35:02
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.40
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  C:\Users\David\SkyDrive\ECE 306\homework-05\clocks.c
#    Command line  =  
#        "C:\Users\David\SkyDrive\ECE 306\homework-05\clocks.c" -lC
#        "C:\Users\David\SkyDrive\ECE 306\homework-05\Debug\List" -o
#        "C:\Users\David\SkyDrive\ECE 306\homework-05\Debug\Obj" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR5739__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.3\430\lib\dlib\dl430xlsfn.h"
#        --core=430X --data_model=small -On --multiplier=32
#        --hw_workaround=CPU40 --code_model=large
#    List file     =  
#        C:\Users\David\SkyDrive\ECE 306\homework-05\Debug\List\clocks.lst
#    Object file   =  
#        C:\Users\David\SkyDrive\ECE 306\homework-05\Debug\Obj\clocks.r43
#
###############################################################################

C:\Users\David\SkyDrive\ECE 306\homework-05\clocks.c
      1          //------------------------------------------------------------------------------
      2          //  File Name : clocks.c
      3          //
      4          //  Description: This file contains the Clock Initialization 
      5          //
      6          //  Jim Carlson
      7          //  Jan 2016
      8          //  Built with IAR Embedded Workbench Version: V7.3.1.3987 (6.40.1)
      9          //------------------------------------------------------------------------------
     10          
     11          //------------------------------------------------------------------------------
     12          #include  "msp430.h"

   \                                 In  segment DATA16_AN, at 0x160
   \   union <unnamed> _A_CSCTL0_L
   \                     _A_CSCTL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x162
   \   union <unnamed> _A_CSCTL1_L
   \                     _A_CSCTL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x164
   \   union <unnamed> _A_CSCTL2_L
   \                     _A_CSCTL2_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x166
   \   union <unnamed> _A_CSCTL3_L
   \                     _A_CSCTL3_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x168
   \   union <unnamed> _A_CSCTL4_L
   \                     _A_CSCTL4_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x15c
   \   union <unnamed> _A_WDTCTL_L
   \                     _A_WDTCTL_L:
   \   000000                DS8 2
     13          #include  "macros.h"
     14          
     15          
     16          void Init_Clocks(void);
     17          

   \                                 In  segment CODE, align 2
     18          void Init_Clocks(void){
   \                     Init_Clocks:
     19          //------------------------------------------------------------------------------
     20          // Clock Configurtaions
     21          // This is the clock initialization for the program.
     22          //
     23          // Initial clock configuration, runs immediately after boot.
     24          // Disables 1ms watchdog timer, 
     25          //      configure MCLK to 8MHz
     26          //      configure SMCLK to 500KHz.  
     27          // Since the X1 oscillator is not currently connected, 
     28          // X1CLK is an unknown speed (probably ~10kHz).
     29          //------------------------------------------------------------------------------
     30            WDTCTL = WDTPW | WDTHOLD;  // Disable watchdog
   \   000000   B240805A5C01 MOV.W   #0x5a80, &0x15c
     31          //  PJSEL0 |= XINR;
     32          //  PJSEL0 |= XOUTR;
     33            
     34          // Clocks:
     35          // Clock System Control 0 Register
     36            CSCTL0 = CSKEY;            // Unlock register
   \   000006   B24000A56001 MOV.W   #0xa500, &0x160
     37            
     38          // Clock System Control 1 Register
     39            CSCTL1 = CLEAR_REGISTER;   // Clear register
   \   00000C   82436201     MOV.W   #0x0, &0x162
     40            CSCTL1 &= ~DCORSEL;        // DCO range select. For high-speed devices,
   \   000010   B2C080006201 BIC.W   #0x80, &0x162
     41                                       // this bit can be written by the user.
     42                                       // For low-speed devices, it is always reset.
     43          //  CSCTL1 |= DCOFSEL_0;     // Set 5.33MHz DCO or 16MHz  
     44          //  CSCTL1 |= DCOFSEL_1;     // Set 6.67MHz DCO or 20MHz 
     45          //  CSCTL1 |= DCOFSEL_2;     // Set 5.33MHz DCO or 16MHz
     46            CSCTL1 |= DCOFSEL_3;       // Set 8MHz DCO or 24MHz
   \   000016   B2D006006201 BIS.W   #0x6, &0x162
     47            
     48          // Clock System Control 2 Register
     49            CSCTL2 = CLEAR_REGISTER;   // Clear register
   \   00001C   82436401     MOV.W   #0x0, &0x164
     50          //  CSCTL2 |= SELA_0;        // set ACLK = XT1; 
     51            CSCTL2 = SELA_1;           // set ACLK = vlo;
   \   000020   B24000016401 MOV.W   #0x100, &0x164
     52            CSCTL2 |= SELS_3;          // set SMCLK = DCO;
   \   000026   B2D030006401 BIS.W   #0x30, &0x164
     53            CSCTL2 |= SELM_3;          // set MCLK = DCO
   \   00002C   B2D003006401 BIS.W   #0x3, &0x164
     54            
     55          // Clock System Control 3 Register
     56            CSCTL3 = CLEAR_REGISTER;   // Clear register
   \   000032   82436601     MOV.W   #0x0, &0x166
     57            CSCTL3 |= DIVA_0;          // set ACLK clock divider /1
   \   000036   924266016601 MOV.W   &0x166, &0x166
     58            CSCTL3 |= DIVS_4;          // set SMCLK clock divider /16
   \   00003C   B2D040006601 BIS.W   #0x40, &0x166
     59            CSCTL3 |= DIVM_0;          // set MCLK clock divider /1
   \   000042   924266016601 MOV.W   &0x166, &0x166
     60            
     61          // Clock System Control 4 Register
     62            CSCTL4 = CLEAR_REGISTER;   // Clear register
   \   000048   82436801     MOV.W   #0x0, &0x168
     63            CSCTL4 &= ~XT1OFF;         // XT1 is on if XT1 is selected by the port selection and XT1 is not in bypass 
   \   00004C   92C36801     BIC.W   #0x1, &0x168
     64            CSCTL4 &= ~SMCLKOFF;       // SMCLK is not Off 
   \   000050   A2C36801     BIC.W   #0x2, &0x168
     65            CSCTL4 &= ~XT1BYPASS;      // XT1 sourced from external crystal 
   \   000054   B2C010006801 BIC.W   #0x10, &0x168
     66            CSCTL4 &= ~XTS;            // Low-frequency mode
   \   00005A   B2C020006801 BIC.W   #0x20, &0x168
     67            CSCTL4 |= XT1DRIVE_0;      // Lowest current consumption for XT1 LF mode. 
   \   000060   924268016801 MOV.W   &0x168, &0x168
     68                                       // XT1 oscillator operating range in HF mode is 4 MHz to 8 MHz.
     69            CSCTL4 |= XT2OFF;          // High Frequency Oscillator 2 (XT2) disable 
   \   000066   B2D000016801 BIS.W   #0x100, &0x168
     70            
     71            CSCTL0_H = CSLOCK;         // Lock registers
   \   00006C   D2436101     MOV.B   #0x1, &0x161
     72          //------------------------------------------------------------------------------
     73          }
   \   000070   1001         RETA
   \   000072                REQUIRE _A_WDTCTL_L
   \   000072                REQUIRE _A_CSCTL0_L
   \   000072                REQUIRE _A_CSCTL1_L
   \   000072                REQUIRE _A_CSCTL2_L
   \   000072                REQUIRE _A_CSCTL3_L
   \   000072                REQUIRE _A_CSCTL4_L
     74          
     75          

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Init_Clocks


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
     114  Init_Clocks
       2  _A_CSCTL0_L
       2  _A_CSCTL1_L
       2  _A_CSCTL2_L
       2  _A_CSCTL3_L
       2  _A_CSCTL4_L
       2  _A_WDTCTL_L

 
 114 bytes in segment CODE
  12 bytes in segment DATA16_AN
 
 114 bytes of CODE memory
   0 bytes of DATA memory (+ 12 bytes shared)

Errors: none
Warnings: none
